(()=>{"use strict";var e={466:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChessView=void 0;const s=r(884);t.ChessView=class{constructor(e,t){this.controller=t,this.renderEnabled=!0,this.cvsDim=e,this.pieceRend=new s.textPieceDrawer,this.boardRend=new s.solidBoardDrawer;let r=document.getElementById("root"),i=document.createElement("canvas");i.height=e,i.width=e,i.addEventListener("click",(e=>this.controller.processInput(e.x,e.y,this.cvsDim))),r.appendChild(i),this.CTX=i.getContext("2d")}toggleRender(){this.renderEnabled=!this.renderEnabled}draw(e,t){this.CTX.clearRect(0,0,this.cvsDim,this.cvsDim),!1===this.renderEnabled?this.drawToConsole(e,t):(this.boardRend.draw(t,this.CTX,this.cvsDim),this.pieceRend.draw(e,this.CTX,this.cvsDim))}drawToConsole(e,t){let r=Array.from(Array(8),(e=>Array.from(Array(8),(e=>"-"))));for(let t of e)r[t.x][t.y]=(0,s.getLetterFromPiece)(t);let[i,a]=["",""];for(var o=7;o>=0;o--){for(var l=0;l<8;l++)a=r[l][o],i+=a;console.log(i),i=""}}}},120:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChessController=void 0;const s=r(769),i=r(466);t.ChessController=class{constructor(){this.enPassantTarget="NONE",this.selection="NONE",this.whoseTurn="W",this.game=new s.ChessBoard,this.view=new i.ChessView(800,this);let e=this.game.getAllPiecesOf("W");this.currentPlayersLegalMoves=this.calcLegalMoves(e),this.printMoves(),this.display()}display(){let e=this.game.getEmptyMoveBoard();"NONE"!=this.selection&&(e=this.currentPlayersLegalMoves.get(this.selection)),this.view.draw(this.game.getAllGamePieces(),e)}printMoves(){let e="";for(let[t,r]of this.currentPlayersLegalMoves){console.log(t),e="W"==t.color?t.ruleSet:t.ruleSet.toLowerCase();for(let t=0;t<8;t++)for(let s=0;s<8;s++)r[t][s]&&console.log(`${e} can move to (${t},${s})`)}}processInput(e,t,r){let s=r/8,i={x:Math.floor(e/s),y:7-Math.floor(t/s)};if("NONE"==this.selection)this.selectSquare(i),this.display();else if(this.moveIsLegal(this.selection,i)){this.game.commitMove(this.selection,i),this.selection="NONE",this.display(),this.whoseTurn=this.currentOpponent();let e=this.game.getAllPiecesOf(this.whoseTurn);this.currentPlayersLegalMoves=this.calcLegalMoves(e),this.currentPlayerHasLegalMoves()||(this.curPlayerInCheck()?this.handleWin():this.handleStalemate())}else this.selection="NONE"}calcLegalMoves(e){let t=new Map;for(let r of e)t.set(r,this.getLegalMovesOf(r));return t}moveIsLegal(e,t){return!!this.currentPlayersLegalMoves.has(e)&&this.currentPlayersLegalMoves.get(e)[t.x][t.y]}handleWin(){console.log(`Player ${this.whoseTurn} wins by checkmate. `)}handleStalemate(){console.log("A draw by stalemate.")}handleDrawByInsufficientMaterial(){console.log("A draw by insufficient material")}curPlayerInCheck(){let e=this.game.getKingOf(this.whoseTurn);return!this.moveAvoidsCheck(e,{x:e.x,y:e.y})}currentOpponent(){return"W"===this.whoseTurn?"B":"W"}currentPlayerHasLegalMoves(){let e=!1,t=!1;for(let r of this.currentPlayersLegalMoves.values())t=r.map((e=>e.reduce(((e,t)=>e||t)))).reduce(((e,t)=>e||t)),e=e||t;return e}selectSquare(e){let t=this.game.getSquareAt(e);"EMPTY"!=t&&t.color==this.whoseTurn&&(this.selection=t),"NONE"!=this.selection&&this.view.draw(this.game.getAllGamePieces(),this.currentPlayersLegalMoves.get(this.selection))}getLegalMovesOf(e){let t=this.getMovespaceOf(e);if(t=this.inducedCheckFilter(e,t),"KING"==e.ruleSet){let t=this.game.getPlayer(e.color);t.hasKingsideCastleRights&&this.kingsideCastleCheck(e)&&console.log("you can kingside castle"),t.hasQueensideCastleRights&&this.queensideCastleCheck(e)}return t}kingsideCastleCheck(e){return this.intermediateSquaresCheck(e,[{x:5,y:e.y},{x:6,y:e.y}])}queensideCastleCheck(e){return this.intermediateSquaresCheck(e,[{x:1,y:e.y},{x:2,y:e.y},{x:3,y:e.y}])}intermediateSquaresCheck(e,t){let r=[];for(let s of t)r.push(this.game.squareIsEmpty(s)&&this.moveAvoidsCheck(e,s));return r.reduce(((e,t)=>e&&t))}inducedCheckFilter(e,t){for(var r=0;r<8;r++)for(var s=0;s<8;s++)t[r][s]&&(t[r][s]=this.moveAvoidsCheck(e,{x:r,y:s}));return t}moveAvoidsCheck(e,t){let r=this.game.getKingOf(this.whoseTurn),s={x:r.x,y:r.y},i=this.game.getAllPiecesOf(this.currentOpponent());i=i.filter((e=>e.x!=t.x&&e.y!=t.y));let a=e.x,o=e.y,l=this.game.getTestBoard(),h=Object.assign(Object.assign({},e),{x:t.x,y:t.y});l[a][o]="EMPTY",l[t.x][t.y]=h,"KING"==e.ruleSet&&(s=t);let n=[];for(let e of i)if(n=this.getMovespaceOf(e),n[s.x][s.y])return!1;return!0}getMovespaceOf(e){let t={x:e.x,y:e.y};switch(e.ruleSet){case"QUEEN":return this.queenThreats(e.color,t);case"KING":return this.kingThreats(e.color,t);case"KNIGHT":return this.knightThreats(e.color,t);case"BISHOP":return this.bishopThreats(e.color,t);case"ROOK":return this.rookThreats(e.color,t);case"PAWN":return this.combineBoolArrays(this.pawnThreats(e.color,t),this.pawnMoves(e.color,t))}}queenThreats(e,t){return this.combineBoolArrays(this.bishopThreats(e,t),this.rookThreats(e,t))}combineBoolArrays(e,t){return e.map(((e,r)=>e.map(((e,s)=>e||t[r][s]))))}bishopThreats(e,t){return this.directionalThreatSearch(e,t,[{x:1,y:-1},{x:-1,y:1},{x:1,y:1},{x:-1,y:-1}])}rookThreats(e,t){return this.directionalThreatSearch(e,t,[{x:1,y:0},{x:-1,y:0},{x:0,y:-1},{x:0,y:1}])}directionalThreatSearch(e,t,r){let s=this.game.getEmptyMoveBoard(),i=Object.assign({},t),a="EMPTY";for(let o of r){for(let t=1;t<7&&(i.x+=o.x,i.y+=o.y,this.inBounds(i));t++){if(a=this.game.getSquareAt(i),"EMPTY"!=a){if(a.color===e)break;s[i.x][i.y]=!0;break}s[i.x][i.y]=!0}i=Object.assign({},t)}return s}inBounds(e){return!(e.x>7||e.y>7||e.x<0||e.y<0)}pawnThreats(e,t){let r=this.game.getEmptyMoveBoard(),s=1;"B"===e&&(s=-1);let i=[{x:t.x+1,y:t.y+s},{x:t.x-1,y:t.y+s}];for(let t of i)this.inBounds(t)&&(this.game.squareHasEnemy(e,t)||this.EPCheck(t))&&(r[t.x][t.y]=!0);return r}EPCheck(e){let t=this.enPassantTarget;return"NONE"!=t&&t.x==e.x&&t.y==e.y}pawnMoves(e,t){let r=this.game.getEmptyMoveBoard(),s=1;"B"==e&&(s=-1);let i=t.x,a=t.y+s;return this.inBounds({x:i,y:a})&&!this.game.squareIsEmpty({x:i,y:a})||(r[i][a]=!0,a+=s,this.inBounds({x:i,y:a})&&this.pawnHasNotMoved(e,t)&&this.game.squareIsEmpty({x:i,y:a})&&(r[i][a]=!0)),r}pawnHasNotMoved(e,t){switch(e){case"W":return 1===t.y;case"B":return 6===t.y}}knightThreats(e,t){let r,s=this.game.getEmptyMoveBoard();for(let i=-1;i<=1;i+=2)for(let a=-1;a<=1;a+=2){r=[{x:t.x+2*i,y:t.y+a},{x:t.x+i,y:t.y+2*a}];for(let t of r)this.inBounds(t)&&(s[t.x][t.y]=this.canMoveToOrCaptureOn(e,t))}return s}kingThreats(e,t){let r=this.game.getEmptyMoveBoard(),[s,i]=[0,0];for(let a=-1;a<=1;a++)for(let o=-1;o<=1;o++)s=t.x+a,i=t.y+o,this.inBounds({x:s,y:i})&&(r[s][i]=this.canMoveToOrCaptureOn(e,{x:s,y:i}));return r[t.x][t.y]=!1,r}canMoveToOrCaptureOn(e,t){let r=this.game.getSquareAt(t);return"EMPTY"==r||e!=r.color}}},769:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChessBoard=void 0;class r{constructor(e,t){this.hasKingsideCastleRights=!0,this.hasQueensideCastleRights=!0,this.king=e,this.subjects=t}removePiece(e){this.subjects=this.subjects.filter((t=>!(t===e)))}addPiece(e){-1==this.subjects.indexOf(e)&&this.subjects.push(e)}color(){return this.king.color}}t.ChessBoard=class{constructor(){this.players=[],this.board=Array.from(Array(8),(()=>Array(8).fill("EMPTY"))),this.players.push(this.initPlayer("W")),this.players.push(this.initPlayer("B"))}initPlayer(e){let t="W"===e?0:7,s=this.createPieceAt(4,t,"KING",e),i=this.makeSoldiers(e);return new r(s,i)}makeSoldiers(e){let[t,r]=[0,1];"B"==e&&([t,r]=[7,6]);let s=[this.createPieceAt(3,t,"QUEEN",e)];for(let t=0;t<8;t++)s.push(this.createPieceAt(t,r,"PAWN",e));return["ROOK","KNIGHT","BISHOP"].forEach(((r,i)=>{s.push(this.createPieceAt(i,t,r,e)),s.push(this.createPieceAt(7-i,t,r,e))}),this),s}getTestBoard(){let e=Array.from(Array(8),(()=>Array(8).fill("EMPTY"))),t="EMPTY";for(let r=0;r<8;r++)for(let s=0;s<8;s++)t=this.board[r][s],"EMPTY"!=t&&(e[r][s]=Object.assign({},t));return e}getPlayer(e){switch(e){case"W":return this.players[0];case"B":return this.players[1]}}getAllPiecesOf(e){let t=this.getPlayer(e);return[...t.subjects,t.king]}getAllPiecesButKingOf(e){return[...this.getPlayer(e).subjects]}getKingOf(e){return Object.assign({},this.getPlayer(e).king)}getEmptyMoveBoard(){return Array.from(Array(8),(()=>Array(8).fill(!1)))}getSquareAt(e){return this.board[e.x][e.y]}getAllGamePieces(){let e=this.getAllPiecesOf("W"),t=this.getAllPiecesOf("B");return e.concat(t)}commitMove(e,t){this.board[e.x][e.y]="EMPTY";let r=this.board[t.x][t.y];"EMPTY"!=r&&this.clearPiece(r),this.setPieceAt(e,t)}createPieceAt(e,t,r,s){let i={ruleSet:r,color:s,x:e,y:t};return this.board[e][t]=i,i}setPieceAt(e,t){this.board[t.x][t.y]=e,e=Object.assign(e,t)}clearPiece(e){this.getPlayer(e.color).removePiece(e),this.board[e.x][e.y]="EMPTY"}squareIsEmpty(e){return"EMPTY"===this.board[e.x][e.y]}squareHasEnemy(e,t){let r=this.board[t.x][t.y];return"EMPTY"!==r&&e!=r.color}}},884:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getLetterFromPiece=t.solidBoardDrawer=t.spriteSheetPieceDrawer=t.textPieceDrawer=t.boardDrawer=t.pieceDrawer=void 0;class r{getSprite(e){switch(e.color){case"W":return this.getWhiteSprite(e);case"B":return this.getBlackSprite(e)}}}t.pieceDrawer=r;class s{constructor(){this.evenCheckerSprite="",this.oddCheckerSprite="",this.selectedCheckerSprite=""}BGSpriteAtXYGivenThreats(e,t,r){return r[e][t]?this.selectedCheckerSprite:e%2==t%2?this.evenCheckerSprite:this.oddCheckerSprite}}function i(e){let t=e.ruleSet.slice(0,1);return"KNIGHT"==e.ruleSet&&(t="N"),"B"==e.color&&(t=t.toLowerCase()),t}t.boardDrawer=s,t.textPieceDrawer=class extends r{constructor(){super()}draw(e,t,r){let s={spriteChar:"",spriteColor:""},[i,a]=[0,0],o=Math.floor(r/8);t.font=`${Math.floor(o/2)}px Arial`;let l=1/3;for(let r of e)s=this.getSprite(r),i=o*(r.x+l),a=o*(8-(r.y+l)),"white"==s.spriteColor&&(t.strokeStyle="black",t.lineWidth=8,t.strokeText(s.spriteChar,i,a)),t.fillStyle=s.spriteColor,t.fillText(s.spriteChar,i,a)}getWhiteSprite(e){return{spriteChar:i(e),spriteColor:"white"}}getBlackSprite(e){return{spriteChar:i(e),spriteColor:"black"}}},t.spriteSheetPieceDrawer=class extends r{draw(e,t,r){}getBlackSprite(e){return[0,0,0,0]}getWhiteSprite(e){return[0,0,0,0]}pieceDrawingCoordinateTransform(e,t){return[0,0]}},t.solidBoardDrawer=class extends s{constructor(){super(),this.evenCheckerSprite="beige",this.oddCheckerSprite="brown",this.selectedCheckerSprite="grey"}draw(e,t,r){let[s,i,a]=["",0,0],o=r/8;for(var l=0;l<8;l++)for(var h=0;h<8;h++)s=this.BGSpriteAtXYGivenThreats(l,h,e),t.fillStyle=s,i=l*o,a=(7-h)*o,t.fillRect(i,a,o,o)}},t.getLetterFromPiece=i}},t={};new(function r(s){var i=t[s];if(void 0!==i)return i.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,r),a.exports}(120).ChessController)})();
//# sourceMappingURL=bundle.js.map